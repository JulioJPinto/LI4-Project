@inject Data.IDBConnection database
@using BlazorLeilart.Models.Auction

@page "/auctions"

<PageTitle>Auctions</PageTitle>

<div class="w-full px-16 pt-14">
    <h3 class="font-medium pb-3">Auctions</h3>
    <h1 class="font-bold text-4xl pb-4">At the moment</h1>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
    
    @if (!_hasLoadedData)
    {
        <div class="w-full h-[50vh] flex justify-center content-center flex-wrap">
            <Spinner/>
        </div>
    }
    else
    {
        <div class="grid grid-cols-4 gap-8 pt-12 relative">
            @foreach (Auction a in _auctions)
            {
                <a href="/auction/@a.Id">
                    <div class="relative items-center">
                        @if (a.Product != null)
                        {
                            <img src="@a.Product.URL"/>
                            <h2 class="font-semibold">@a.Product.name</h2>
                            <h3>@a.Product.IdVariety</h3>
                        }
                        else
                        {
                            <p>No product available</p>
                        }
                        
                        <h2 class="font-semibold text-xl">$@a.ValorInicial</h2>
                    </div>
                </a>
                
            }
        </div>
    }
</div>

@code {
    
    private List<Auction> _auctions = new List<Auction>();
    private bool _hasLoadedData = true;
    
    protected override async Task OnInitializedAsync()
    {
        var auctions = await database.Connection.QueryAsync<Auction>("SELECT * FROM auction");
        _auctions = auctions.AsList();
        
        var products = await database.Connection.QueryAsync<Product>("SELECT * FROM product");
        List<Product> _products = products.AsList();
        
        foreach (Auction auction in _auctions)
        {
            auction.Product = _products.Find(p => p.Id == auction.IdProduto);
        }


    }
}